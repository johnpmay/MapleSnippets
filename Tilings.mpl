Tilings := module()

export GetTiling := proc(
    tilingtype::string,
    coloring::{list, string}:=FAIL,
    scale::[realcons,realcons] := [1.0,1.0],
    tilingstyle::identical("line", "polygon", "polygonoutline"):="polygonoutline",
    tilingoptions::list := [],
    extraplotoptions::list := [],
    $)
local obj, out;

    obj := TilingObject( tilingtype, tilingoptions );
    out := RenderTiling( obj, coloring, scale, tilingstyle, extraplotoptions);

    return out;

end proc; # GetTiling


export TilingObject := proc( tilingtype, tilingoptions, $ );

    if tilingtype = "square" then
        return SquareTiling(tilingoptions[]);
    elif tilingtype = "triangle" then
        return TriangleTiling(tilingoptions[]);
    elif tilingtype = "hexagon" then
        return HexTiling(tilingoptions[]);
    elif tilingtype = "penrose" then
        return PenroseTiling(tilingoptions[]);
    elif tilingtype = "hat" then
        return HatTiling(tilingoptions[]);
    end if;

    error "tiling type %1 not supported", tilingtype;

end proc; # TilingObject

export RenderTiling := proc(
    obj,
    coloring,
    scale,
    tilingstyle,
    extraplotoptions, $)
local colors, polys, out, i, l;

    if type(coloring, 'string') then
        if ColorTools:-KnownPalette(coloring) then
            colors := [seq(
                ColorTools:-Color(cat(coloring, " ", i)),
                    i=1..obj:-colors) ];
        else
            colors := [ColorTools:-Color(coloring) $ obj:-colors];
        end if;
    elif type(coloring, 'list') then
        if nops(coloring) < obj:-colors or
            irem( nops(coloring), obj:-colors ) <> 0
        then
            error "need %2 colors for tiling", obj:-colors;
        end if;
        colors := map(ColorTools:-Color, coloring);
    else
        colors := map(ColorTools:-Color, plots:-setcolors()[1..obj:-colors]);
    end if;

    out := seq(
        plottools:-translate(
        plottools:-rotate(
        plottools:-scale(
            plottools:-polygon(obj:-shapes[l[1]], 'style'=tilingstyle,
                'color'=colors[l[2]])
        , scale[]), l[4] ), (scale *~ l[3])[])
            , l in obj:-locations);

    return plots:-display( out, 'style'=tilingstyle, 'view'=[0..8,0..8], 'scaling'='constrained', extraplotoptions[] );

end proc; # RenderTiling


export Mosaic := proc(tilingtype, imagefile, tileoptions:=[])
local l, c2color, i;
local obj := Tilings:-TilingObject(tilingtype, tileoptions);
local tiles := [ seq(
        convert(op(1,plottools:-translate(
        plottools:-rotate(
            plottools:-polygon(obj:-shapes[l[1]])
         ,l[4] ), (1. *~ l[3])[])),listlist)
            , l in obj:-locations) ];
local C := map(centroid,tiles);
local XX := [min,max](C[..,1]);
local YX := [min,max](C[..,2]);

local img := ImageTools:-Read(imagefile);
    img := ImageTools:-Scale( ImageTools:-Rotate(img,-Pi/2.), 1..200,1..200);

    c2color := proc(c,img)
    local fx, tx, fy, ty;
    local w := ImageTools:-Width(img);
    local h := ImageTools:-Height(img);
        (fx,tx) := (frac,trunc)((c[1] - XX[1])/(XX[2]-XX[1]) * (h-2)+1); 
        (fy,ty) := (frac,trunc)((c[2] - YX[1])/(YX[2]-YX[1]) * (w-2)+1);
        return ColorTools:-Color("RGB",map(clamp,convert((1-sqrt(fx^2+fy^2))*img[tx,ty] + sqrt(fx^2+fy^2)*img[tx+1,ty+1],list),0,1));
    end proc: # c2color

    return plots:-display(seq(plottools:-polygon(tiles[i],color=c2color(C[i],img)), i=1..nops(tiles)),axes=none, _rest);

end proc;

local clamp := proc(x,a,b) min(max(a,x),b) end proc:

local centroid := proc(p)
local i;
local t := ComputationalGeometry:-PolygonTriangulation(p);
local c := map(s -> 1/3*add(convert(p[s], listlist)[]), t);
local a := map(s -> 0.5*LinearAlgebra:-Determinant(<Matrix(p[s]) | <1., 1., 1.>>), t);
    return add(seq(c[i]*a[i], i = 1 .. nops(t)))/add(a);
end proc:


local SquareTiling := proc(w::posint:=8,l::posint:=8)
local i,j;

    return Record(shapes=[[[0, 0], [1, 0], [1, 1], [0, 1]]], colors=2,
        locations=[ # shape, color, pos, rot
                    seq(seq( [1, (i+j mod 2)+1, [i,j], 0],
                        i=0..w-1), j=0..l-1) ] );

end proc;


local TriangleTiling := proc(w::posint:=11,l::posint:=6)
local i,j;

    return Record(shapes=[[[0, 3/2], [-1/2*3^(1/2), 0], [1/2*3^(1/2), 0]]],
            'colors'=2,
            locations=[ # shape, color, pos, rot
                        seq(seq( [1, (i+j mod 2)+1, [i*1/2*3^(1/2),(3/2)*j+(i+j mod 2)*(3/2)], (i+j mod 2)*Pi],
                            i=0..w-1), j=0..l-1) ] );

end proc;


local HexTiling := proc(w::posint:=6,l::posint:=6)
local i, j;

    return Record(
            shapes=[ [[1, 3^(1/2)], [0, 3^(1/2)], [-1/2, 1/2*3^(1/2)], [0, 0], [1, 0], [3/2, 1/2*3^( 1/2)]] ],
            'colors'=3,
            locations=[ # shape, color, pos, rot
                seq(
                seq( [1, ((i mod 2)+j mod 3)+1, [i*3/2, j*sqrt(3) -(i mod 2)*sqrt(3)/2], 0], j=0..l-1),
                i=0..l-1)
            ] );

end proc;


local PenroseTiling := proc()

    return Record(
            shapes = [
            # large romb
            [[0, 0], [(125*sqrt(5))/4 - 275/4, 0], [(25*sqrt(5))/4 - 25/2, (125*sin((2*Pi)/5)*sqrt(5))/4 - (275*sin((2*Pi)/5))/4], [225/4 - 25*sqrt(5), (125*sin((2*Pi)/5)*sqrt(5))/4 - (275*sin((2*Pi)/5))/4]],
            # small romb
            [[0, 0], [-(125*sqrt(5))/4 + 275/4, 0], [-(325*sqrt(5))/8 + 725/8, (25*sin((2*Pi)/5)*(-9 + 4*sqrt(5)))/2], [175/8 - (75*sqrt(5))/8, (25*sin((2*Pi)/5)*(-9 + 4*sqrt(5)))/2]]
            ],
            'colors'=2,
            locations=[ # # shape, color, pos, rot
# 83 tile tiling of [0..8]^2
[1, 1, [-225/2+50*5^(1/2), 0], -1/2*Pi-arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[2, 2, [325/8*5^(1/2)-725/8, 225/2*sin(2/5*Pi)-50*sin(2/5*Pi)*5^(1/2)], -1/2*Pi
-arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[1, 1, [125/8*5^(1/2)-275/8, -75/4*sin(2/5*Pi)*5^(1/2)+175/4*sin(2/5*Pi)], -1/2
*Pi+arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[2, 2, [175/4-75/4*5^(1/2), 0], -1/2*Pi-arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)
))],
[2, 2, [-225/4+25*5^(1/2), 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -1/2*
Pi-arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[1, 1, [25/4*5^(1/2)-25/2, 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [125/8*5^(1/2)-275/8, -75/4*sin(2/5*Pi)*5^(1/2)+175/4*sin(2/5*Pi)], -1/2
*Pi-arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [-175/8+75/8*5^(1/2), 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[2, 2, [75/2*5^(1/2)-325/4, 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -1/2*
Pi-arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [175/8-75/8*5^(1/2), 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -1/2*Pi-
arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)))],
[2, 2, [25/4*5^(1/2)-25/2, 625/4*sin(2/5*Pi)-275/4*sin(2/5*Pi)*5^(1/2)], -1/2*
Pi-arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[1, 1, [225/8*5^(1/2)-475/8, -75/4*sin(2/5*Pi)*5^(1/2)+175/4*sin(2/5*Pi)], -1/2
*Pi+arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [125/8*5^(1/2)-275/8, -375/4*sin(2/5*Pi)+175/4*sin(2/5*Pi)*5^(1/2)], -Pi
],
[1, 1, [175/4-75/4*5^(1/2), -75/2*sin(2/5*Pi)*5^(1/2)+175/2*sin(2/5*Pi)], -1/2*
Pi+arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [25/4*5^(1/2)-25/2, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi+
arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [25/2*5^(1/2)-25, 0], -1/2*Pi-arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [25/8*5^(1/2)-25/8, 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -Pi],
[2, 2, [275/8-125/8*5^(1/2), -375/4*sin(2/5*Pi)+175/4*sin(2/5*Pi)*5^(1/2)], -Pi
],
[2, 2, [75/4*5^(1/2)-75/2, 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -1/2*
Pi+arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [525/8-225/8*5^(1/2), 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -Pi],
[1, 1, [-225/4+25*5^(1/2), 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [25/8*5^(1/2)-25/8, 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -1/2*Pi+
arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [25/4*5^(1/2)-25/2, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[2, 2, [-225/4+25*5^(1/2), 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [225/8*5^(1/2)-475/8, -375/4*sin(2/5*Pi)+175/4*sin(2/5*Pi)*5^(1/2)], -1/
2*Pi+arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [75-125/4*5^(1/2), 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -1/2*Pi
-arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)))],
[1, 1, [25/4*5^(1/2)-25/2, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], 0],
[1, 1, [75/4-25/4*5^(1/2), 0], 0],
[1, 1, [175/8-75/8*5^(1/2), 125/2*sin(2/5*Pi)-25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi+
arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [75/4*5^(1/2)-75/2, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi+
arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [25/8*5^(1/2)-25/8, 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -1/2*Pi-
arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [-175/8+75/8*5^(1/2), 125/2*sin(2/5*Pi)-25*sin(2/5*Pi)*5^(1/2)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [75/2*5^(1/2)-325/4, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi
-arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [75/4-25/4*5^(1/2), -275/2*sin(2/5*Pi)+125/2*sin(2/5*Pi)*5^(1/2)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[2, 2, [175/8-75/8*5^(1/2), 125/2*sin(2/5*Pi)-25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)))],
[2, 2, [25*5^(1/2)-50, -275/2*sin(2/5*Pi)+125/2*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [225/8*5^(1/2)-475/8, -225/4*sin(2/5*Pi)*5^(1/2)+525/4*sin(2/5*Pi)], -1/
2*Pi-arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [25/4*5^(1/2)-25/2, -475/4*sin(2/5*Pi)+225/4*sin(2/5*Pi)*5^(1/2)], -1/2*
Pi+arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [125/8*5^(1/2)-225/8, 225/2*sin(2/5*Pi)-50*sin(2/5*Pi)*5^(1/2)], -1/2*Pi
-arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [25*5^(1/2)-50, -75/2*sin(2/5*Pi)*5^(1/2)+175/2*sin(2/5*Pi)], 0],
[2, 2, [25/2*5^(1/2)-25, -50*sin(2/5*Pi)+25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [75-125/4*5^(1/2), 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)))],
[1, 1, [25*5^(1/2)-50, 0], -1/2*Pi-arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [125/8*5^(1/2)-275/8, 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -Pi],
[1, 1, [125/8*5^(1/2)-225/8, 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -1/2*Pi+
arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [75/8-25/8*5^(1/2), 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -1/2*Pi+
arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [25/8*5^(1/2)-25/8, 125/2*sin(2/5*Pi)-25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi+
arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [75/4-25/4*5^(1/2), -75/2*sin(2/5*Pi)*5^(1/2)+175/2*sin(2/5*Pi)], 0],
[1, 1, [75/4-25/4*5^(1/2), -50*sin(2/5*Pi)+25*sin(2/5*Pi)*5^(1/2)], -Pi+arccos(
(-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [25/4, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi+arcsin((-38+
17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [125/8*5^(1/2)-275/8, 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -1/2*
Pi-arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[1, 1, [225/8-75/8*5^(1/2), -75/4*sin(2/5*Pi)*5^(1/2)+175/4*sin(2/5*Pi)], -1/2*
Pi+arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [75/8-25/8*5^(1/2), 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [-175/8+75/8*5^(1/2), -75*sin(2/5*Pi)+75/2*sin(2/5*Pi)*5^(1/2)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [125/8*5^(1/2)-225/8, 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -Pi+
arccos((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [25/8*5^(1/2)-25/8, 125/2*sin(2/5*Pi)-25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin((-2+5^(1/2))/(-7+3*5^(1/2)))],
[2, 2, [25*5^(1/2)-50, -50*sin(2/5*Pi)+25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-arcsin(
1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [425/8-175/8*5^(1/2), 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -1/2*
Pi-arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)))],
[2, 2, [25/4*5^(1/2)-25/4, -75/2*sin(2/5*Pi)*5^(1/2)+175/2*sin(2/5*Pi)], -1/2*
Pi-arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [25/4*5^(1/2)-25/2, 425/4*sin(2/5*Pi)-175/4*sin(2/5*Pi)*5^(1/2)], -1/2*
Pi-arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [-75/4*5^(1/2)+50, 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -Pi],
[2, 2, [175/8-75/8*5^(1/2), -75*sin(2/5*Pi)+75/2*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin((-29+13*5^(1/2))/(-36+16*5^(1/2)))],
[2, 2, [-775/8+375/8*5^(1/2), 25/2*sin(2/5*Pi)*5^(1/2)-25*sin(2/5*Pi)], -1/2*Pi
-arcsin(1/4*(-199+89*5^(1/2))/(-9+4*5^(1/2))^2)],
[2, 2, [75/4-25/4*5^(1/2), 175*sin(2/5*Pi)-75*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-
arcsin(1/4*(-521+233*5^(1/2))/(-9+4*5^(1/2))^2)],
[1, 1, [25/8*5^(1/2)-25/8, -75*sin(2/5*Pi)+75/2*sin(2/5*Pi)*5^(1/2)], -Pi],
[1, 1, [25/2*5^(1/2)-75/4, 125/4*sin(2/5*Pi)*5^(1/2)-275/4*sin(2/5*Pi)], -Pi],
[1, 1, [125/8*5^(1/2)-225/8, 125/2*sin(2/5*Pi)-25*sin(2/5*Pi)*5^(1/2)], -1/2*Pi
+arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [175/4-75/4*5^(1/2), -25/2*sin(2/5*Pi)*5^(1/2)+75/2*sin(2/5*Pi)], -1/2*
Pi+arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[1, 1, [25/4, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi-arcsin((-2+5^
(1/2))/(-7+3*5^(1/2)))],
[1, 1, [-75+75/2*5^(1/2), -75/2*sin(2/5*Pi)*5^(1/2)+175/2*sin(2/5*Pi)], -1/2*Pi
+arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [75-125/4*5^(1/2), 425/4*sin(2/5*Pi)-175/4*sin(2/5*Pi)*5^(1/2)], -1/2*Pi
+arcsin((-38+17*5^(1/2))/(-47+21*5^(1/2)))],
[2, 2, [75/(2*5^(1/2)-2)-25/(2*5^(1/2)-2)*5^(1/2), -50*sin(2/5*Pi)+25*sin(2/5*
Pi)*5^(1/2)], -1/2*Pi+arcsin((-161+72*5^(1/2))/(521-233*5^(1/2)))],
[1, 1, [25/2*5^(1/2)-75/4, 75/4*sin(2/5*Pi)-25/4*sin(2/5*Pi)*5^(1/2)], -Pi],
[1, 1, [75/4-25/4*5^(1/2), -25/2*sin(2/5*Pi)*5^(1/2)+75/2*sin(2/5*Pi)], -1/2*Pi
+arcsin((-29+13*5^(1/2))/(42*5^(1/2)-94))],
[1, 1, [225/8-75/8*5^(1/2), 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -Pi],
[2, 2, [-325/8*5^(1/2)+775/8, 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -Pi],
[1, 1, [75/(2*5^(1/2)-2)-25/(2*5^(1/2)-2)*5^(1/2), -50*sin(2/5*Pi)+25*sin(2/5*
Pi)*5^(1/2)], -1/2*Pi+arcsin((-123+55*5^(1/2))/(152-68*5^(1/2)))],
[1, 1, [225/8-75/8*5^(1/2), 25/4*sin(2/5*Pi)*5^(1/2)-25/4*sin(2/5*Pi)], -1/2*Pi
-arcsin((-123+55*5^(1/2))/(152-68*5^(1/2)))],
[1, 1, [325/(4*5^(1/2)-4)-125/(4*5^(1/2)-4)*5^(1/2), -475/4*sin(2/5*Pi)+225/4*
sin(2/5*Pi)*5^(1/2)], -Pi],
[2, 2, [425/(4*5^(1/2)-4)-175/(4*5^(1/2)-4)*5^(1/2), -75*sin(2/5*Pi)+75/2*sin(2
/5*Pi)*5^(1/2)], -1/5*Pi],
[2, 2, [-575/(4*5^(1/2)-4)+275/(4*5^(1/2)-4)*5^(1/2), -475/4*sin(2/5*Pi)+225/4*
sin(2/5*Pi)*5^(1/2)], -Pi],
[1, 1, [75/(2*5^(1/2)-2)-25/(2*5^(1/2)-2)*5^(1/2), -25/2*sin(2/5*Pi)*5^(1/2)+75
/2*sin(2/5*Pi)], -1/2*Pi-arcsin((-47+21*5^(1/2))/(152-68*5^(1/2)))],
[2, 2, [-125/(2*5^(1/2)-2)*5^(1/2)+300/(2*5^(1/2)-2), 25/4*sin(2/5*Pi)*5^(1/2)-\
25/4*sin(2/5*Pi)], -1/2*Pi-arcsin((-161+72*5^(1/2))/(521-233*5^(1/2)))],


            NULL
            ]);

end proc;


local HatTiling := proc()

    return Record(
                'shapes' = [
                # hat
                [[0., -0.], [0.00109552796080692, -0.361738853547134], [-0.312727272727273, -0.541659525276086], [-0.209813562948283, -0.727044114779843], [-0.315268108402829, -0.909696745396197], [-0.000349779753942236, -1.09151492721438], [0.317109384570501, -0.905295888912449], [0.420023094349491, -1.09068047841621], [0.632027713219389, -1.08711407073063], [0.630932185258582, -0.725375217183497], [0.316013856609693, -0.543557035365316], [0.421468402064241, -0.360904404748961], [0.314918328648887, -0.181818181818182], [0.212004618869898, 0.00356640768557437]],
                # reflected hat - so much roundoff error
                [[0., 0.], [-0.00109552796080781, -0.361738853547134], [0.312727272727273, -0.541659525276086], [0.209813562948283, -0.727044114779843], [0.315268108402828, -0.909696745396197], [0.000349779753941348, -1.09151492721438], [-0.317109384570501, -0.905295888912449], [-0.420023094349491, -1.09068047841621], [-0.632027713219389, -1.08711407073063], [-0.630932185258581, -0.725375217183498], [-0.316013856609694, -0.543557035365316], [-0.421468402064241, -0.360904404748961], [-0.314918328648887, -0.181818181818182], [-0.212004618869898, 0.00356640768557437]]
                ],
                'colors' = 2,
                'locations' = [
[1, 2, [-.215291202725046, .181818181454545], 2/3*Pi],
[1, 2, [.41344992661192, .179920671365315], 1/3*Pi],
[2, 1, [-.216386730685853, -.543557035728952], 2/3*Pi],
[1, 2, [-.846223387983627, .179920671365315], 1/3*Pi],
[1, 2, [.41344992661192, .907193398638042], 1/3*Pi],
[1, 2, [-.84512786002282, .545454545090909], 2/3*Pi],
[1, 2, [1.35601385663697, -.00189751045286624], 0],
[1, 2, [.0985315979630336, 1.45644296427105], Pi],
[1, 2, [1.04109552798808, 1.27462478245287], -2/3*Pi],
[1, 2, [1.98804156985635, -.36173885391077], Pi],
[2, 1, [.41344992661192, 2.00189750972559], 2/3*Pi],
[1, 2, [2.30405542646605, .909090908727272], 2/3*Pi],
[1, 2, [1.66983665732505, 1.99999999963636], -1/3*Pi],
[1, 2, [2.61787822715413, .00189750972559377], Pi],
[1, 2, [2.29967331462282, 1.636363636], -1/3*Pi],
[1, 2, [1.04328658390969, 2.72537521681986], 1/3*Pi],
[1, 2, [2.9306054998814, -.543557035728952], -2/3*Pi],
[1, 2, [1.98585051393474, 2.54355703500168], 0],
[1, 2, [1.04000000002727, 3.09090909054545], -1/3*Pi],
[1, 2, [.728368255260807, 3.27462478245287], Pi],
[1, 2, [2.93279655580301, 1.63446612591077], 1/3*Pi],
[1, 2, [2.61787822715413, 2.18371569154377], Pi],
[2, 1, [3.2477148844519, 1.08901158045622], 0],
[1, 2, [.410163342729499, 3.45454545418182], -1/3*Pi],
[1, 2, [1.67093218528585, 3.09280660063468], -2/3*Pi],
[1, 2, [3.55934662921837, .181818181454545], -1/3*Pi],
[1, 2, [3.56372874106159, -.545454545818182], 2/3*Pi],
[1, 2, [2.30405542646605, 3.09090909054545], 2/3*Pi],
[1, 2, [3.87755154174967, .00189750972559377], Pi],
[1, 2, [1.35820491255858, 3.63826114608923], Pi],
[1, 2, [3.56372874106159, 1.636363636], 2/3*Pi],
[1, 2, [2.93389208376382, 2.72727272690909], 2/3*Pi],
[1, 2, [3.56044215717917, 2.00189750972559], -2/3*Pi],
[2, 1, [.0985315979630338, 4.3617388531835], 0],
[1, 2, [4.19356539835937, 1.27272727236364], 2/3*Pi],
[1, 2, [2.29967331462282, 3.81818181781818], -1/3*Pi],
[1, 2, [2.61787822715413, 3.63826114608923], Pi],
[1, 2, [4.50738819904745, .365533873361957], Pi],
[1, 2, [.411258870690306, 4.54735205518014], -2/3*Pi],
[1, 2, [1.0443821118705, 4.54545454509091], 2/3*Pi],
[1, 2, [3.56263321310079, 3.45264794409259], 1/3*Pi],
[2, 1, [4.82340205565714, 1.27272727236364], 1/3*Pi],
[2, 1, [4.19027881447695, 2.72537521681986], -1/3*Pi],
[2, 1, [.0963405420414194, 5.09280660063468], Pi],
[2, 1, [1.98804156985635, 4.72537521681986], 0],
[1, 2, [3.2477148844519, 4.00189750972559], Pi],
[1, 2, [1.04000000002727, 5.27272727236364], -1/3*Pi],
[1, 2, [5.44995212907249, .183715691543775], -2/3*Pi],
[1, 2, [5.44995212907249, -.543557035728952], -2/3*Pi],
[1, 2, [1.67312324120747, 5.27082976227441], 1/3*Pi],
[1, 2, [4.50519714312583, 3.27082976227441], 0],
[1, 2, [4.19027881447695, 3.82007932790741], -2/3*Pi],
[1, 2, [3.87755154174967, 4.36553387336196], Pi],
[1, 2, [5.76487045772138, 1.08901158045622], 0],
[1, 2, [5.13722485634522, 2.9109884188165], Pi],
[1, 2, [-.215291202725046, 5.99999999963636], 2/3*Pi],
[1, 2, [6.07869325840946, .181818181454545], -1/3*Pi],
[1, 2, [6.08307537025269, -.545454545818182], 2/3*Pi],
[1, 2, [4.82340205565714, 3.81818181781818], 2/3*Pi],
[1, 2, [-.533496115256354, 6.17992067136532], 0],
[1, 2, [6.07978878637027, 1.27462478245287], -2/3*Pi],
[1, 2, [.726177199339193, 6.17992067136532], 0],
[1, 2, [1.67312324120747, 5.99810248954713], 1/3*Pi],
[1, 2, [3.56372874106159, 5.27272727236364], 2/3*Pi],
[1, 2, [6.07978878637027, 2.00189750972559], -2/3*Pi],
[1, 2, [-.84512786002282, 6.36363636327273], 2/3*Pi],
[1, 2, [6.39689817094077, .729170236998321], Pi],
[1, 2, [1.98804156985635, 6.18371569154378], Pi],
[1, 2, [4.81901994381391, 4.54545454509091], -1/3*Pi],
[2, 1, [5.45323871295492, 3.81818181781818], 1/3*Pi],
[1, 2, [6.07978878637027, 2.72917023699832], -2/3*Pi],
[2, 1, [2.92950997192059, 5.99999999963636], -2/3*Pi],
[1, 2, [1.35601385663697, 6.54355703500168], 0],
[1, 2, [6.71181649958965, .179920671365315], 1/3*Pi],
[1, 2, [.41344992661192, 6.72537521681986], 1/3*Pi],
[1, 2, [5.13722485634522, 4.36553387336196], Pi],
[1, 2, [3.55934662921837, 5.99999999963636], -1/3*Pi],
[1, 2, [6.71291202755046, 1.99999999963636], 2/3*Pi],
[2, 1, [4.50738819904745, 5.45264794409259], 0],
[1, 2, [7.02673482823854, 1.09280660063468], Pi],
[1, 2, [1.04109552798808, 7.09280660063468], -2/3*Pi],
[1, 2, [6.70852991570723, 2.72727272690909], -1/3*Pi],
[1, 2, [1.67421876916827, 7.09090909054545], 2/3*Pi],
[1, 2, [4.19246987039856, 5.99810248954713], 1/3*Pi],
[1, 2, [6.39470711501915, 3.63446612591077], 0],
[1, 2, [7.33946210096582, .54735205518014], -2/3*Pi],
[1, 2, [2.30295989850524, 7.08901158045623], 1/3*Pi],
[1, 2, [5.76706151364299, 4.72917023699832], Pi],
[1, 2, [3.87755154174967, 6.54735205518014], Pi],
[1, 2, [3.24552382853029, 6.90719339863804], 0],
[1, 2, [7.6543804296147, -.00189751045286624], 0],
[1, 2, [6.70962544366804, 3.82007932790741], -2/3*Pi],
[1, 2, [7.02673482823854, 3.27462478245287], Pi],
[1, 2, [7.34165315688743, 2.72537521681986], 1/3*Pi],
[1, 2, [1.04109552798808, 7.82007932790741], -2/3*Pi],
[2, 1, [7.65657148553632, 2.17992067136532], 0],
[1, 2, [4.82011547177472, 6.36553387336196], -2/3*Pi],
[1, 2, [7.97258534214601, .545454545090909], 2/3*Pi],
[1, 2, [1.66983665732505, 7.81818181781818], -1/3*Pi],
[2, 1, [6.08197984229188, 5.27462478245287], 2/3*Pi],
[1, 2, [7.96820323030278, 1.27272727236364], -1/3*Pi],
[1, 2, [6.70962544366804, 4.54735205518014], -2/3*Pi],
[1, 2, [2.30295989850524, 7.81628430772895], 1/3*Pi],
[2, 1, [4.19246987039856, 7.09280660063468], 2/3*Pi],
[2, 1, [7.34165315688743, 3.82007932790741], 2/3*Pi],
[1, 2, [8.28640814283409, -.36173885391077], Pi],
[1, 2, [8.28640814283409, 1.09280660063468], Pi],
[1, 2, [-.533496115256354, 8.3617388531835], 0],
[1, 2, [7.96929875826359, 3.09280660063468], -2/3*Pi],
[1, 2, [1.35601385663697, 8.72537521681986], 0],
[1, 2, [2.30295989850524, 8.54355703500168], 1/3*Pi],
[2, 1, [.414545454572727, 8.90909090872727], 1/3*Pi],
[1, 2, [5.44885660111169, 7.09090909054545], -1/3*Pi],
[1, 2, [6.71181649958965, 5.99810248954713], 1/3*Pi],
[1, 2, [7.33836657300501, 5.27272727236364], -1/3*Pi],
[1, 2, [6.07869325840946, 6.72727272690909], -1/3*Pi],
[1, 2, [7.9714898141852, 4.54355703500168], 1/3*Pi],
[1, 2, [4.82230652769633, 7.81628430772895], 1/3*Pi],
[1, 2, [6.70852991570723, 6.36363636327273], -1/3*Pi],
[1, 2, [1.98585051393474, 9.08901158045622], 0],
[1, 2, [7.96820323030278, 4.90909090872727], -1/3*Pi],
[1, 2, [8.59803988760056, 3.81818181781818], -1/3*Pi],
[1, 2, [4.81901994381391, 8.18181818145455], -1/3*Pi],
[1, 2, [4.18918328651614, 8.54545454509091], -1/3*Pi],
[1, 2, [7.9714898141852, 5.27082976227441], 1/3*Pi],
[1, 2, [5.76487045772138, 7.63446612591077], 0],
[1, 2, [7.6543804296147, 5.81628430772895], 0],
[1, 2, [6.39689817094077, 7.27462478245287], Pi],
[1, 2, [7.33946210096582, 6.36553387336196], -2/3*Pi],
[1, 2, [5.44995212907249, 8.18371569154378], -2/3*Pi],
[1, 2, [8.28640814283409, 5.45644296427105], Pi],
[1, 2, [7.97258534214601, 6.36363636327273], 2/3*Pi],
[1, 2, [7.33946210096582, 7.09280660063468], -2/3*Pi],
[2, 1, [6.71291202755046, 8.18181818145455], 1/3*Pi],
[1, 2, [7.96820323030278, 7.09090909054545], -1/3*Pi],
[1, 2, [6.07869325840946, 8.90909090872727], -1/3*Pi],
[1, 2, [7.6543804296147, 7.99810248954713], 0],
[1, 2, [8.28640814283409, 7.63826114608923], Pi],
[1, 2, [7.96929875826359, 8.18371569154378], -2/3*Pi],
[1, 2, [9.22897207285914, 7.45644296427105], -2/3*Pi]
                    ]);
end proc;


end module:
